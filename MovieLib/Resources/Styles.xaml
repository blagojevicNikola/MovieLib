<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ic="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <Style x:Key="CloseWindowButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="19"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="40"
                                Background="{TemplateBinding Button.Background}"/>
                        <ContentPresenter Content="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="IndianRed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <VisualBrush x:Key="PasswordBoxVisualBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
        <VisualBrush.Visual>
            <Label Content="Username" Foreground="Black" FontSize="17" />
        </VisualBrush.Visual>
    </VisualBrush>

    <Style x:Key="LoginButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="290"/>
        <Setter Property="Background" Value="SteelBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="14"
                                Background="{TemplateBinding Button.Background}"/>
                        <ContentPresenter Content="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="Login"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RegisterButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{TemplateBinding Button.Background}"/>
                        <ContentPresenter Content="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="Register now"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="CadetBlue"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="CredentialsTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordTextBox" TargetType="PasswordBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Password" Foreground="LightGray" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="Background" Value="{StaticResource CueBannerBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding PasswordBox.Background}"
                CornerRadius="7"
                BorderBrush="{TemplateBinding PasswordBox.BorderBrush}"
                BorderThickness="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MoviesNavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="65"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="10,10,10,0">
                        <Border Background="{TemplateBinding ToggleButton.Background}"
                                CornerRadius="11"/>
                        <StackPanel Orientation="Horizontal"
                                    Margin="15,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                            <ic:PackIconMaterial Kind="MovieOutline" Height="30" Width="30"
                                                 VerticalAlignment="Center"/>
                            <Label Content="{DynamicResource MoviesText}" FontSize="24" 
                                   FontFamily="{DynamicResource ThemeFontFamilyMedium}"
                                   FontWeight="Light" 
                                   Margin="10,0,0,0"
                                   Padding="0"
                                   VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonHoverColor}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonCheckedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlaylistNavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="65"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="10,10,10,0">
                        <Border Background="{TemplateBinding ToggleButton.Background}"
                                CornerRadius="11"/>
                        <StackPanel Orientation="Horizontal"
                                    Margin="15,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                            <ic:PackIconMaterial Kind="FormatListBulletedSquare" Height="30" Width="30"
                                                 VerticalAlignment="Center"/>
                            <Label Content="{DynamicResource PlaylistText}" FontSize="24" 
                                   FontFamily="{DynamicResource ThemeFontFamilyMedium}"
                                   FontWeight="Light" 
                                   Margin="10,0,0,0"
                                   Padding="0"
                                   VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonHoverColor}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonCheckedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SettingsNavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="65"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="10,10,10,0">
                        <Border Background="{TemplateBinding ToggleButton.Background}"
                                CornerRadius="11"/>
                        <StackPanel Orientation="Horizontal"
                                    Margin="15,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                            <ic:PackIconMaterial Kind="CogOutline" Height="30" Width="30"
                                                 VerticalAlignment="Center"/>
                            <Label Content="{DynamicResource SettingsText}" FontSize="24" 
                                   FontFamily="{DynamicResource ThemeFontFamilyMedium}"
                                   FontWeight="Light" 
                                   Margin="10,0,0,0"
                                   Padding="0"
                                   VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonHoverColor}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonCheckedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UsersNavigationButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="65"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="10,10,10,0">
                        <Border Background="{TemplateBinding ToggleButton.Background}"
                                CornerRadius="11"/>
                        <StackPanel Orientation="Horizontal"
                                    Margin="15,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center">
                            <ic:PackIconMaterial Kind="AccountCircleOutline" Height="30" Width="30"
                                                 VerticalAlignment="Center"/>
                            <Label Content="{DynamicResource UsersText}" FontSize="24" 
                                   FontFamily="{DynamicResource ThemeFontFamilyMedium}"
                                   FontWeight="Light" 
                                   Margin="10,0,0,0"
                                   Padding="0"
                                   VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonHoverColor}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource NavigationButtonCheckedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddMovieButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="SteelBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="50"
                                Background="{TemplateBinding Button.Background}"/>
                        <ic:PackIconMaterial Kind="PlusCircleOutline" 
                                             Height="32" 
                                             Width="32" 
                                             Foreground="White"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="Login"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="27"/>
        <Setter Property="Width" Value="27"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="50"
                                Background="{TemplateBinding Button.Background}"/>
                        <ic:PackIconMaterial Kind="ArrowLeft" 
                                             Height="18" 
                                             Width="18" 
                                             Foreground="{DynamicResource FontColor}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d1d1d1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NewMovieButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Background" Value="SteelBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="14"
                                Background="{TemplateBinding Button.Background}"/>
                        <ic:PackIconMaterial Kind="Check" 
                                             Height="32" 
                                             Width="32" 
                                             Foreground="White"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MovieTitleTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="{DynamicResource TitleText}" Foreground="{DynamicResource PromtTextColor}" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="UsernameTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Username" Foreground="LightGray" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="CommentTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7"/>
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="{DynamicResource CommentText}" Foreground="{DynamicResource PromtTextColor}" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="NameTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Name" Foreground="LightGray" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="SurnameTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Surname" Foreground="LightGray" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordPlainTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Password" Foreground="LightGray" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="SlateGray"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="MovieDirectorTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="{DynamicResource DirectorText}" Foreground="{DynamicResource PromtTextColor}" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="MoviePublishedTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="{DynamicResource PublishDateText}" Foreground="{DynamicResource PromtTextColor}" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="MovieDescriptionTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                <VisualBrush.Visual>
                    <Label Padding="1" Content="{DynamicResource DescriptionText}" Foreground="{DynamicResource PromtTextColor}" FontSize="17" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="BorderBrush" Value="LightBlue"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="14"
                                Background="{TemplateBinding Button.Background}"/>
                        <ic:PackIconMaterial Kind="Magnify" 
                                             Height="20" 
                                             Width="20" 
                                             Foreground="{DynamicResource PromtTextColor}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#bfbfbf"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CrudButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="50"
                                Background="{TemplateBinding Button.Background}"/>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Button.Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MovieTypeCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0,9,9,0"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="IsChecked" Value="{Binding Selected, Mode=TwoWay}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="12"
                                BorderThickness="2"
                                BorderBrush="White"
                                Background="{TemplateBinding CheckBox.Background}"/>
                        <Label Content="{Binding Name}" 
                               Margin="4" 
                               Padding="0" 
                               Foreground="DarkSlateGray"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddToPlaylistButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="50"
                                Background="{TemplateBinding Button.Background}"/>
                        <ic:PackIconMaterial Kind="MovieCheck" Height="15" Width="15"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RateComboBoxStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="EnglishLanguageRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding RadioButton.Background}"
                            CornerRadius="8">
                        <ContentPresenter Content="{TemplateBinding RadioButton.Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <DataTrigger Binding="{Binding English}" Value="True">
                <Setter Property="IsChecked" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="SerbianLanguageRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding RadioButton.Background}"
                            CornerRadius="8">
                        <ContentPresenter Content="{TemplateBinding RadioButton.Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
            <DataTrigger Binding="{Binding Serbian}" Value="True">
                <Setter Property="IsChecked" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DarkThemeRadioButtonStyle" TargetType="RadioButton">
        <!--<Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="45"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="themeButtonBorder"
                                Height="45"
                                Width="45"
                                Background="{TemplateBinding RadioButton.Background}"
                                BorderBrush="Transparent"
                                BorderThickness="4"
                                Grid.Row="0"
                                CornerRadius="40">
                        </Border>
                        <ContentPresenter Grid.Row="1" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding RadioButton.Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter TargetName="themeButtonBorder" Property="Border.BorderBrush" Value="LightBlue"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Dark}" Value="True">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightThemeRadioButtonStyle" TargetType="RadioButton">
        <!--<Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="45"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="themeButtonBorder"
                                Height="45"
                                Width="45"
                                Background="{TemplateBinding RadioButton.Background}"
                                BorderBrush="Transparent"
                                BorderThickness="4"
                                Grid.Row="0"
                                CornerRadius="40">
                        </Border>
                        <ContentPresenter Grid.Row="1" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding RadioButton.Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter TargetName="themeButtonBorder" Property="Border.BorderBrush" Value="LightBlue"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Light}" Value="True">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueThemeRadioButtonStyle" TargetType="RadioButton">
        <!--<Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="45"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="themeButtonBorder"
                                Height="45"
                                Width="45"
                                Background="{TemplateBinding RadioButton.Background}"
                                BorderBrush="Transparent"
                                BorderThickness="4"
                                Grid.Row="0"
                                CornerRadius="40">
                        </Border>
                        <ContentPresenter Grid.Row="1" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding RadioButton.Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter TargetName="themeButtonBorder" Property="Border.BorderBrush" Value="LightBlue"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Blue}" Value="True">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MovieTypeListRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBlock FontSize="16"
                                       FontWeight="SemiBold"
                                       Text="{Binding Name}"
                                       Foreground="{TemplateBinding RadioButton.Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AllMovieTypeListRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBlock FontSize="16"
                                       FontWeight="SemiBold"
                                       Text="All"
                                       Foreground="{TemplateBinding RadioButton.Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="LightBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RemoveFromPlaylistButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="{DynamicResource RemoveMovieButtonBackground}"
                                CornerRadius="50"/>
                        <ic:PackIconMaterial Kind="Close" 
                                             Height="9"
                                             Width="9"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Foreground="{DynamicResource RemoveMoveiButtonForeground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>